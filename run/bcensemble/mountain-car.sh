#!/bin/bash

# Algo Naming Scheme:
######################################################################################
# bc = behavioral cloning
# bce = behavioral cloning ensemble
# <number>p = Number of ensemble policies used (i.e., networks trained)
# nosplit = Data is not partitioned based on number of policies. 

# Global args
######################################################################################
wandb=offline
run_all=false

# hydra_job='--cfg job' # Show full config (unbuilt)
hydra_job='-m'
# hydra_job='--hydra-help'

# Backwards avg/fail
######################################################################################
if true || ${run_all} ; then
    exp_group=v0
    expert_paths=['$\{hydra:runtime.cwd\}/demos/v0/$\{env_spec.vars.name\}/human/backwards/avg']
    imperfect_paths=['$\{hydra:runtime.cwd\}/demos/v0/$\{env_spec.vars.name\}/human/backwards/fail']
    expert_file_pattern='traj.*\.h5'
    imperfect_file_pattern='traj.*\.h5'

    # BC 
    ######################################################################################
    if false || ${run_all} ; then

        for size in 20 15 10 5
        do
            train=true # Enable training
            cuda_deterministic=true # False means no CUDA deterministic mode
            seed=0
            expert_size=${size}
            imperfect_size=20

            eval=true # Enable eval

            algo_name=bc
            data_name=backwards/avg-fail/${expert_size}-${imperfect_size}

            if ${train} || ${run_all} ; then
                HYDRA_FULL_ERROR=1 WANDB_MODE=$wandb python main.py ${hydra_job} -cn='imitate' \
                +experiment=mountain_car/bc/train \
                imitation/imitator=bc-disc \
                imitation/imitator/instance/demonstrations=concat-rand-expert-imperfect \
                ++output_dir.exp_group=${exp_group} \
                ++output_dir.algo_name=${algo_name} \
                ++output_dir.data_name=${data_name} \
                ++vars.set_seed.seed=${seed} \
                ++vars.set_seed.cuda_deterministic=${cuda_deterministic} \
                ++imitation.vars.expert_paths=${expert_paths} \
                ++imitation.vars.expert_file_pattern=${expert_file_pattern} \
                ++imitation.vars.expert_size=${expert_size} \
                ++imitation.vars.imperfect_paths=${imperfect_paths} \
                ++imitation.vars.imperfect_file_pattern=${imperfect_file_pattern} \
                ++imitation.vars.imperfect_size=${imperfect_size} 
            fi

            if ${eval} || ${run_all} ; then
                run_id=rid0 # Update to match rid generated by train

                HYDRA_FULL_ERROR=1 WANDB_MODE=$wandb python main.py ${hydra_job} -cn='eval' \
                +experiment=mountain_car/bc/eval \
                ++output_dir.exp_group=${exp_group} \
                ++output_dir.algo_name=${algo_name} \
                ++output_dir.data_name=${data_name} \
                ++output_dir.run_id=${run_id} \
                ++vars.set_seed.seed=0 \
                ++vars.set_seed.cuda_deterministic=False 
            fi
        done
    fi
    # BC Ensemble 5 Policies
    ######################################################################################
    if true || ${run_all} ; then
        for size in 20 15 10 5
        do
            train=true # Enable training
            cuda_deterministic=true # False means no CUDA deterministic mode
            seed=0
            expert_size=${size}
            imperfect_size=20

            eval=true # Enable eval

            algo_name="bce-polices\=5"
            data_name=backwards/avg-fail/${expert_size}-${imperfect_size}

            if ${train} || ${run_all} ; then
                HYDRA_FULL_ERROR=1 WANDB_MODE=$wandb python main.py ${hydra_job} -cn='imitate' \
                +experiment=mountain_car/bc/train \
                imitation/imitator=bce-disc-5p \
                imitation/imitator/instance/demonstrations=concat-rand-expert-imperfect \
                ++output_dir.exp_group=${exp_group} \
                ++output_dir.algo_name=${algo_name} \
                ++output_dir.data_name=${data_name} \
                ++vars.set_seed.seed=${seed} \
                ++vars.set_seed.cuda_deterministic=${cuda_deterministic} \
                ++imitation.vars.expert_paths=${expert_paths} \
                ++imitation.vars.expert_file_pattern=${expert_file_pattern} \
                ++imitation.vars.expert_size=${expert_size} \
                ++imitation.vars.imperfect_paths=${imperfect_paths} \
                ++imitation.vars.imperfect_file_pattern=${imperfect_file_pattern} \
                ++imitation.vars.imperfect_size=${imperfect_size} 
            fi

            if ${eval} || ${run_all} ; then
                run_id=rid0 # Update to match rid generated by train

                HYDRA_FULL_ERROR=1 WANDB_MODE=$wandb python main.py ${hydra_job} -cn='eval' \
                +experiment=mountain_car/bc/eval \
                ++output_dir.exp_group=${exp_group} \
                ++output_dir.algo_name=${algo_name} \
                ++output_dir.data_name=${data_name} \
                ++output_dir.run_id=${run_id} \
                ++vars.set_seed.seed=0 \
                ++vars.set_seed.cuda_deterministic=False 
            fi
        done
    fi
fi