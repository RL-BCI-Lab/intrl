# Required Params
######################
# output_dir: pipeline_group, algo_name
# env_spec: vars.name, env.instance
# evaluation: evaluator.func
# Be sure to check specified evaluation and env_spec configs for additional required params (e.g., ???) 

# Build Order
######################
# 1) output_dir
# 2) vars 
# 3) env_spec
# 4) evaluation

defaults:
  - output_dir: default
  - hydra: default
  - _self_
  - env_spec: ???
  - evaluation: Null
  - override hydra/hydra_logging: disabled  
  - override hydra/job_logging: disabled 

# (Optional) Top (i.e., global) level variables that are instantiated first
# Set anything you like to reference later here.
vars:
  _convert_: 'object'
  demo_dir: ${hydra:runtime.cwd}/demos
  set_seed: 
    _target_: intrl.common.utils.set_torch_random_seed
    seed: Null
    cuda_deterministic: False

evaluation:
  vars:
    load_root_path: ${hydra:runtime.cwd}/${output_dir.run_dir}
    load_rel_path: train/policy/policy.pt
    load_path: ${.load_root_path}/${.load_rel_path}
  logger: 
    _target_: intrl.common.logger.spawn_child
    folder: evaluator
    format_strs: ["stdout", "csv", "log", "json"]
  evaluator:
    _convert_: 'object'
    func: ??? # Reference to function for running evaluation (e.g., sb3 evaluate_policy())

output_dir:
  root_dir: exps
  pipeline_group: ???
  pipeline_stage: eval-${get_run_id:${.run_dir},eval-}
  algo_name: ???
 